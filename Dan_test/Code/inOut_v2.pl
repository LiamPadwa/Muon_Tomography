#! /usr/bin/perl
# inOut_v2
# Original code by Dan Levin
# this code
# 1)  reads in data files generated by the CAEN DAQ for the Tel Aviv University detector
# 2) parses event hits (scintillator hits)  that have hits on each of four ASICs.
# 3) this defines a good muon - as two X and two Y coordiante hits are present.
# 4) the data from these hits are written to the output
#Usage:
#  perl inOut_v2.pl  inputDir outFilename
# or 
#  nohup perl inOut_v2.pl inputDir outut filename &
#  where inputDir is a directory containing the text data files of the type:  NNN.data   NNN =run number
# written by Dan Levin, University of Michigan, Dec 2024.
#############################################################################

use warnings;
use strict;
use Data::Dumper;

my $line;
my $f1;
my $f2;
my $f3;
my $f4;
my $asic_0;
my $evc_0;
my $RUNevtimeLSB_0;
my $RUNevtime_0;
my $t0ev_0;
my $t0evns_0;
my $trig_0;
my $valid_0;
my $flag_0;
my @hit_0 =(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
my @adclg_0 =(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
my @adchg_0 =(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
#my @dummy=(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
my @dummy;
my $dirIn;
my $dirOut;
my $file;
my $rtfile;
my $outputFile;
#my $array;

#
$dirIn  = $ARGV[0];
#$dirOut = $ARGV[1];
#$outputFile = join "", $dirOut, $ARGV[2];
$outputFile = $ARGV[1];
open RTOUT, "> $outputFile" || die("Could not open output file!");   ; 

#chdir $dirIn;
foreach $file (<$dirIn/*.data>) {
  open(RT, $file) || die("Could not open file!"); 
#  print "\n output directory = $dirOut   file = $file  output file = $outputFile  \n";
#  print "\n output file = $outputFile  \n";
#  print RTOUT "1234AAAA1234 \n";

  my @array=<RT>;
  #close(RT); 
  foreach $line (@array)
    {
  #    print "$line \n"; 
  #    print "test \n";
      chomp($line); 
      ($f1,$f2,$f3,$f4,@dummy)=split(/;/,$line);

#      ($f1,$f2,$f3,$f4,$asic_0,$evc_0,$RUNevtimeLSB_0,$RUNevtime_0,$t0ev_0,$t0evns_0,$trig_0,$valid_0,$flag_0,@hit_0,@adclg_0,@adchg_0)=split(/;/,$line);
#      ($f1,$f2,$f3,$f4)=split(/;/,$line);
      my $count=0;
      my $jc=0; 
     # my $jcount=0;
      my @spl = split(/;/,$line);
      foreach my $i (@spl)
	{
	  $count++;
	  if($count==4 && $i eq "4" )  
	    {
	      $jc=0;
#	      print RTOUT "\n";
	      print RTOUT "1234BBBB1234, \n";
	      foreach my $j (@spl){
		$jc++;
		if($jc<=4 || 
		   ($jc>=5 && $jc<=13) ||
		   ($jc>=14 && $jc<=45) ||
#		   ($jc>=46 && $jc<=77) ||
		   ($jc>=78 && $jc<=109) ||
		   ($jc>=110 && $jc<=118) ||
		   ($jc>=119 && $jc<=150) ||
#		   ($jc>=151 && $jc<=182) ||
		   ($jc>=183 && $jc<=214) ||
		   ($jc>=215 && $jc<=223) ||
		   ($jc>=224 && $jc<=255) ||
#		   ($jc>=256 && $jc<=287) ||
		   ($jc>=288 && $jc<=319) ||
		   ($jc>=320 && $jc<=328) ||
		   ($jc>=329 && $jc<=360) ||
#		   ($jc>=361 && $jc<=392) ||
		   ($jc>=393 && $jc<=424) ){print RTOUT "$j,";}

#		if ($jc == 4   || $jc ==13  || $jc ==45 ||$jc==77 ||
#		    $jc==109 || $jc==118 || $jc==150   ||$jc==182 ||
#		    $jc==109 || $jc==118 || $jc==150   ||$jc==182 ||
#		    $jc==214 || $jc==223 || $jc==255 ||$jc==287 ||
#		    $jc==319 || $jc==328 || $jc==360 ||$jc==392 || $jc==424 ){print RTOUT "\n";}
		if ($jc == 4   || $jc ==13  || $jc ==45 ||
		    $jc==109 || $jc==118 || $jc==150  ||
		    $jc==214 || $jc==223 || $jc==255  ||
		    $jc==319 || $jc==328 || $jc==360 || $jc==424 ){print RTOUT "\n";}
	      }

	    }	      
	}
      #      print RTOUT "$f1,$f2,$f3,$f4,$asic_0,$evc_0,$RUNevtimeLSB_0,$RUNevtime_0,$t0ev_0,$t0evns_0,$trig_0,$valid_0,$flag_0,@hit_0,@adclg_0,@adchg_0 \n";
      
    }
close(RT);
}
close(RTOUT);


#=============================================================================
# ID_CLUSTER;CLUSTER_RUN_Timecode_ns;CLUSTER_Timecode_ns;NEventsInCluster;

# ASIC_0;EventCounter_0;RUN_EventTimeCodeLSB_0;RUN_EventTimecode_ns_0;T0_to_Event_Timecode_0;T0_to_Event_Timecode_ns_0;Trigger_ID_0;Validation_ID_0;Flags_0;
# HIT_0_0;... HIT_0_31;
# CHARGE_LG_0_0;... CHARGE_LG_0_31;
# CHARGE_HG_0_0;... CHARGE_HG_0_31;

# ASIC_1;EventCounter_1;RUN_EventTimeCodeLSB_1;RUN_EventTimecode_ns_1;T0_to_Event_Timecode_1;T0_to_Event_Timecode_ns_1;Trigger_ID_1;Validation_ID_1;Flags_1;
# HIT_1_0;... HIT_0_31;
# CHARGE_LG_1_0;... CHARGE_LG_1_31;
# CHARGE_HG_1_0;... CHARGE_HG_1_31;

# ASIC_2;EventCounter_2;RUN_EventTimeCodeLSB_2;RUN_EventTimecode_ns_2;T0_to_Event_Timecode_2;T0_to_Event_Timecode_ns_2;Trigger_ID_2;Validation_ID_0;Flags_2;
# HIT_2_0;... HIT_0_31;
# CHARGE_LG_2_0;... CHARGE_LG_2_31;
# CHARGE_HG_2_0;... CHARGE_HG_2_31;

# ASIC_3;EventCounter_3;RUN_EventTimeCodeLSB_3;RUN_EventTimecode_ns_3;T0_to_Event_Timecode_3;T0_to_Event_Timecode_ns_3;Trigger_ID_3;Validation_ID_0;Flags_3;
# HIT_3_0;... HIT_3_31;
# CHARGE_LG_3_0;... CHARGE_LG_3_31;
# CHARGE_HG_3_0;... CHARGE_HG_3_31;
